// <auto-generated />
using System;
using Implementation.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("LlmApi")
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entity.ModelEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<long>("ContextTokenCount")
                        .HasColumnType("bigint");

                    b.Property<bool>("ImageSupport")
                        .HasColumnType("boolean");

                    b.Property<bool>("JsonResponseOptimized")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastUpdatedUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("MaxTokenCount")
                        .HasColumnType("bigint");

                    b.Property<string>("ModelDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ModelDisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ModelIdentifierName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Provider")
                        .HasColumnType("integer");

                    b.Property<bool>("VideoSupport")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("ModelEntity", "LlmApi");
                });

            modelBuilder.Entity("Domain.Entity.PriceEntity", b =>
                {
                    b.Property<Guid>("ModelId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("Id")
                        .HasColumnType("uuid");

                    b.Property<long>("MillionInputTokenPrice")
                        .HasColumnType("bigint");

                    b.Property<long>("MillionOutputTokenPrice")
                        .HasColumnType("bigint");

                    b.HasKey("ModelId");

                    b.ToTable("PriceEntity", "LlmApi");
                });

            modelBuilder.Entity("Domain.Entity.ModelEntity", b =>
                {
                    b.HasOne("Domain.Entity.PriceEntity", "Price")
                        .WithOne()
                        .HasForeignKey("Domain.Entity.ModelEntity", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Price");
                });
#pragma warning restore 612, 618
        }
    }
}
